# Generated by Django 5.1.1 on 2025-06-20 01:18

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[('admin', 'مسؤول الجمعية'), ('staff', 'موظف الجمعية'), ('field_team', 'فريق الميدان'), ('beneficiary', 'مستفيد'), ('volunteer', 'متطوع')], max_length=20, verbose_name='نوع المستخدم')),
                ('phone', models.CharField(max_length=20, verbose_name='رقم الهاتف')),
                ('gender', models.CharField(choices=[('male', 'ذكر'), ('female', 'أنثى')], max_length=10, verbose_name='الجنس')),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profile_pictures/', verbose_name='صورة الملف الشخصي')),
                ('is_verified', models.BooleanField(default=False, verbose_name='حساب موثق')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإنشاء')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاريخ التحديث')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'مستخدم',
                'verbose_name_plural': 'المستخدمون',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Beneficiary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=200, verbose_name='الاسم الثلاثي')),
                ('birth_date', models.DateField(verbose_name='تاريخ الميلاد')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='البريد الإلكتروني')),
                ('residence_type', models.CharField(choices=[('host_community', 'مجتمع مضيف'), ('returnee_internal', 'عائد (نازح داخلياً)'), ('returnee_refugee', 'عائد (لاجئ)'), ('idp', 'نازح داخلي')], max_length=50, verbose_name='طبيعة الإقامة')),
                ('current_address', models.TextField(verbose_name='العنوان الحالي')),
                ('previous_address', models.TextField(blank=True, null=True, verbose_name='العنوان السابق')),
                ('living_status', models.CharField(choices=[('owned', 'ملك'), ('rented', 'استئجار'), ('hosted', 'استضافة')], max_length=50, verbose_name='مكان الإقامة')),
                ('marital_status', models.CharField(choices=[('single', 'أعزب'), ('married', 'متزوج'), ('divorced', 'مطلق'), ('widowed', 'أرمل')], max_length=50, verbose_name='الحالة الاجتماعية')),
                ('family_members', models.PositiveIntegerField(verbose_name='عدد أفراد الأسرة')),
                ('education', models.CharField(max_length=100, verbose_name='التحصيل العلمي')),
                ('job', models.CharField(blank=True, max_length=100, null=True, verbose_name='العمل الحالي')),
                ('weaknesses_disabilities', models.TextField(verbose_name='نقاط الضعف / الإعاقة')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='ملاحظات إضافية')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإنشاء')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاريخ التحديث')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='beneficiary', to=settings.AUTH_USER_MODEL, verbose_name='المستخدم')),
            ],
            options={
                'verbose_name': 'مستفيد',
                'verbose_name_plural': 'المستفيدون',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Evaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('evaluation_date', models.DateField(auto_now_add=True, verbose_name='تاريخ التقييم')),
                ('needs_level', models.PositiveIntegerField(choices=[(1, 'منخفض'), (2, 'متوسط'), (3, 'عالي')], verbose_name='مستوى الحاجة')),
                ('vulnerability_score', models.PositiveIntegerField(help_text='من 1 إلى 10', verbose_name='درجة الضعف')),
                ('notes', models.TextField(verbose_name='ملاحظات التقييم')),
                ('recommendations', models.TextField(blank=True, null=True, verbose_name='التوصيات')),
                ('is_approved', models.BooleanField(default=False, verbose_name='موافق عليه')),
                ('beneficiary', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='evaluations', to='myappG.beneficiary', verbose_name='المستفيد')),
                ('evaluator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='المقيّم')),
            ],
            options={
                'verbose_name': 'تقييم',
                'verbose_name_plural': 'التقييمات',
            },
        ),
        migrations.CreateModel(
            name='ProjectRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_type', models.CharField(choices=[('small_business', 'مشروع صغير'), ('agricultural', 'مشروع زراعي')], max_length=50, verbose_name='نوع المشروع')),
                ('project_description', models.TextField(verbose_name='وصف المشروع')),
                ('estimated_budget', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='الميزانية المقدرة')),
                ('status', models.CharField(choices=[('pending', 'قيد المراجعة'), ('under_review', 'قيد التقييم'), ('approved', 'موافق عليه'), ('rejected', 'مرفوض'), ('delivered', 'تم التسليم')], default='pending', max_length=50, verbose_name='حالة الطلب')),
                ('request_date', models.DateField(auto_now_add=True, verbose_name='تاريخ الطلب')),
                ('approval_date', models.DateField(blank=True, null=True, verbose_name='تاريخ الموافقة')),
                ('completion_date', models.DateField(blank=True, null=True, verbose_name='تاريخ الإنجاز')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='ملاحظات')),
                ('beneficiary', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='projects', to='myappG.beneficiary', verbose_name='المستفيد')),
                ('reviewer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_projects', to=settings.AUTH_USER_MODEL, verbose_name='المسؤول عن المراجعة')),
            ],
            options={
                'verbose_name': 'طلب مشروع',
                'verbose_name_plural': 'طلبات المشاريع',
            },
        ),
        migrations.CreateModel(
            name='MaterialAidRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('aid_type', models.CharField(choices=[('washing_machine', 'غسالة'), ('fridge', 'براد'), ('oven', 'فرن'), ('laser heater', 'سخانة ليزرية'), ('battery', 'بطارية'), ('water_tank', 'خزان'), ('heater', 'مدفئة'), ('carpet', 'سجادة')], max_length=50, verbose_name='نوع المساعدة العينية')),
                ('status', models.CharField(choices=[('pending', 'قيد المراجعة'), ('under_review', 'قيد التقييم'), ('approved', 'موافق عليه'), ('rejected', 'مرفوض'), ('delivered', 'تم التسليم')], default='pending', max_length=50, verbose_name='حالة الطلب')),
                ('request_date', models.DateField(auto_now_add=True, verbose_name='تاريخ الطلب')),
                ('review_date', models.DateField(blank=True, null=True, verbose_name='تاريخ المراجعة')),
                ('delivery_date', models.DateField(blank=True, null=True, verbose_name='تاريخ التسليم')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='ملاحظات')),
                ('beneficiary', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='material_aids', to='myappG.beneficiary', verbose_name='المستفيد')),
                ('reviewer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_material_aids', to=settings.AUTH_USER_MODEL, verbose_name='المسؤول عن المراجعة')),
            ],
            options={
                'verbose_name': 'طلب مساعدة عينية',
                'verbose_name_plural': 'طلبات المساعدات العينية',
                'constraints': [models.UniqueConstraint(condition=models.Q(('status__in', ['pending', 'approved', 'under_review'])), fields=('beneficiary', 'aid_type'), name='unique_material_aid_per_beneficiary')],
            },
        ),
        migrations.CreateModel(
            name='MedicalAidRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('aid_type', models.CharField(choices=[('nebulizer', 'جهاز رذاذ'), ('diabetes_device', 'جهاز سكري'), ('pressure_device', 'جهاز ضغط'), ('walker', 'وكر'), ('wheelchair', 'كرسي متحرك'), ('medical_mattress', 'إسفنجة طبية')], max_length=50, verbose_name='نوع المساعدة الطبية')),
                ('status', models.CharField(choices=[('pending', 'قيد المراجعة'), ('under_review', 'قيد التقييم'), ('approved', 'موافق عليه'), ('rejected', 'مرفوض'), ('delivered', 'تم التسليم')], default='pending', max_length=50, verbose_name='حالة الطلب')),
                ('request_date', models.DateField(auto_now_add=True, verbose_name='تاريخ الطلب')),
                ('review_date', models.DateField(blank=True, null=True, verbose_name='تاريخ المراجعة')),
                ('delivery_date', models.DateField(blank=True, null=True, verbose_name='تاريخ التسليم')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='ملاحظات')),
                ('beneficiary', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='medical_aids', to='myappG.beneficiary', verbose_name='المستفيد')),
                ('reviewer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_medical_aids', to=settings.AUTH_USER_MODEL, verbose_name='المسؤول عن المراجعة')),
            ],
            options={
                'verbose_name': 'طلب مساعدة طبية',
                'verbose_name_plural': 'طلبات المساعدات الطبية',
                'constraints': [models.UniqueConstraint(condition=models.Q(('status__in', ['pending', 'approved', 'under_review'])), fields=('beneficiary', 'aid_type'), name='unique_medical_aid_per_beneficiary')],
            },
        ),
    ]
